import logging
import random

from pytest_tui.my_logger import get_my_loggers

my_logger_a, my_logger_b = get_my_loggers()


class ClassA:
    def __init__(self):
        self.logger_a = my_logger_a
        self.logger_b = my_logger_b

    def log_random_output(self):
        self.logger_a.warning(
            f"Logging random output from ClassA: {random.randint(1, 10)}"
        )
        self.logger_b.error(
            f"Logging random output from ClassA: {random.choice(['Authority', 'modern', 'difficult', 'instead', 'term'])}"
        )

    def print_random_output(self):
        print(f"Printing random output from ClassA: {random.randint(1, 10)}")
        print(
            f"Printing random output from ClassA: {random.choice(['Oil', 'television', 'day', 'likely', 'business', 'yes'])}"
        )


class ClassB:
    def __init__(self):
        self.logger_a = my_logger_a
        self.logger_b = my_logger_b

    def log_random_output(self):
        self.logger_a.warning(
            f"Logging random output from ClassB: {random.randint(1, 10)}"
        )
        self.logger_b.error(
            f"Logging random output from ClassB: {random.choice(['However', 'take', 'begin', 'what'])}"
        )

    def print_random_output(self):
        print(f"Printing random output from ClassB: {random.randint(1, 10)}")
        print(
            f"Printing random output from ClassB: {random.choice(['festivus', 'parkour', 'battery', 'staple', 'horse'])}"
        )


# Create instances of the classes and call their methods
a = ClassA()
b = ClassB()

a.log_random_output()
a.print_random_output()
b.log_random_output()
b.print_random_output()

class Node:
    def __init__(self, data):
        self.end = data
        self.next = None

def funcy(node, word):
    return node.end if len(word) else None
